<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://camel.apache.org/schema/spring
            http://camel.apache.org/schema/spring/camel-spring.xsd
            http://activemq.apache.org/schema/core
            http://activemq.apache.org/schema/core/activemq-core.xsd">

    <amq:broker useJmx="false" persistent="false" id="test-camelot-broker">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:61618"/>
        </amq:transportConnectors>
    </amq:broker>

    <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost:61618"/>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="jmsFactory"/>
        <property name="transacted" value="false"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

    <!-- Beans -->
    <bean id="configurationProperties" class="ru.yandex.qatools.camelot.spring.ListablePropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>camelot.properties</value>
                <value>test-config.properties</value>
            </list>
        </property>
    </bean>

    <bean id="testAggregator" class="ru.yandex.qatools.camelot.core.impl.FSMAggregationStrategy">
        <constructor-arg value="ru.yandex.qatools.camelot.core.impl.TestStateMachine"/>
    </bean>

    <camelContext id="camelotCamelContext" xmlns="http://camel.apache.org/schema/spring">
        <jmxAgent id="agent" disabled="true"/>
        <threadPoolProfile id="camelotDefaultProfile" defaultProfile="true" maxPoolSize="64"/>
        <endpoint id="events.input" uri="${camelot.input.uri}"/>
        <endpoint id="events.output" uri="${camelot.output.uri}"/>

        <endpoint id="exec" uri="seda:queue:test?concurrentConsumers=5"/>

        <route id="test-aggregator">
            <from uri="seda:queue:test"/>
            <log message="${in.body.class.simpleName}"/>
            <aggregate strategyRef="testAggregator">
                <correlationExpression>
                    <simple>${in.body.uuid}</simple>
                </correlationExpression>
                <completionPredicate>
                    <method bean="testAggregator" method="isCompleted"/>
                </completionPredicate>
                <to uri="seda:queue:done"/>
            </aggregate>
        </route>

        <route id="done">
            <from uri="seda:queue:done"/>
            <to ref="events.output"/>
        </route>

        <route id="stopped">
            <from ref="events.output"/>
            <stop/>
        </route>
    </camelContext>
</beans>
